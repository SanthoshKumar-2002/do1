// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi2.Entities;

#nullable disable

namespace WebApi2.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApi.Entities.Models.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Line1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Type")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.Property<Guid>("country")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Email", b =>
                {
                    b.Property<Guid>("EmailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("Type")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmailId");

                    b.HasIndex("UserId");

                    b.ToTable("emails");
                });

            modelBuilder.Entity("WebApi.Entities.Models.FileModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("FormFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long?>("Size")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WebApi.Entities.Models.PhoneNumber", b =>
                {
                    b.Property<Guid>("phoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("Type")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("phoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("phoneId");

                    b.HasIndex("UserId");

                    b.ToTable("phoneNumbers");
                });

            modelBuilder.Entity("WebApi.Entities.Models.RefSet", b =>
                {
                    b.Property<Guid>("RefSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("RefSetId");

                    b.ToTable("refSets");

                    b.HasData(
                        new
                        {
                            RefSetId = new Guid("1398ff0d-2062-4594-23d4-08dac5f97924"),
                            Description = "for the personal",
                            Name = "PERSONAL"
                        },
                        new
                        {
                            RefSetId = new Guid("1398ff0d-2062-4594-23d4-08dac5f97923"),
                            Description = "for the work",
                            Name = "WORK"
                        },
                        new
                        {
                            RefSetId = new Guid("1398ff0d-2062-4594-23d4-08dac5f97922"),
                            Description = "for the alternate",
                            Name = "ALTERNATE"
                        },
                        new
                        {
                            RefSetId = new Guid("1398ff0d-2062-4594-23d4-08dac5f97914"),
                            Description = "for the country India",
                            Name = "INDIA"
                        },
                        new
                        {
                            RefSetId = new Guid("1298ff0d-2062-4594-23d4-08dac5f97924"),
                            Description = "for the country USA",
                            Name = "USA"
                        },
                        new
                        {
                            RefSetId = new Guid("1398ff0d-2062-4594-23d4-08dac5f97921"),
                            Description = "for the country UK",
                            Name = "UK"
                        },
                        new
                        {
                            RefSetId = new Guid("1398ff0d-2062-5594-23d4-08dac5f97924"),
                            Description = "for the country Japan",
                            Name = "JAPAN"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Models.SetRef", b =>
                {
                    b.Property<Guid>("RefId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RefSetId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RefType")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RefId");

                    b.ToTable("Setrefs");
                });

            modelBuilder.Entity("WebApi.Entities.Models.Types", b =>
                {
                    b.Property<Guid>("RefType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RefType");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("WebApi.Entities.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1398ff0d-2062-4594-33d4-08dac5f97924"),
                            FirstName = "Kavin",
                            IsActive = true,
                            LastName = "Raja",
                            Password = "Kavin@123",
                            UserName = "Kavin"
                        });
                });

            modelBuilder.Entity("WebApi2.Entities.Models.metadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("metadatas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            description = "display the address type",
                            key = "ADDRESS TYPE"
                        },
                        new
                        {
                            Id = 2,
                            description = "display the phonenumber type",
                            key = "PHONE NUMBER TYPE"
                        },
                        new
                        {
                            Id = 3,
                            description = "display the email type",
                            key = "EMAIL ADDRESS TYPE"
                        },
                        new
                        {
                            Id = 4,
                            description = "display the country of the user",
                            key = "Country"
                        },
                        new
                        {
                            Id = 5,
                            description = "display users from India",
                            key = "India"
                        },
                        new
                        {
                            Id = 6,
                            description = "display users in united states",
                            key = "UNITED STATES"
                        });
                });

            modelBuilder.Entity("WebApi.Entities.Models.Address", b =>
                {
                    b.HasOne("WebApi.Entities.Models.User", null)
                        .WithMany("Address")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Entities.Models.Email", b =>
                {
                    b.HasOne("WebApi.Entities.Models.User", null)
                        .WithMany("Email")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Entities.Models.PhoneNumber", b =>
                {
                    b.HasOne("WebApi.Entities.Models.User", null)
                        .WithMany("phoneNumber")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApi.Entities.Models.User", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("Email");

                    b.Navigation("phoneNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
